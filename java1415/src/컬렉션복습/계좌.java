package 컬렉션복습;

public class 계좌 {
//클래스 아래 전역변수,멤버변수(파란색)
	String name; //이름
	String field; //계좌종류
	int money; //금액
	
//자동생성 : 소스 컨스트럭터 유징 필드 (파라메터 생성자 만들기)
		//컨스트럭터 프롬 수퍼클래스 (기본생성자 만들기)
	public 계좌(String name, String field, int money) {
		//갈색 지역변수 (메서드 안에서만 사용)
	
		this.name = name;
		this.field = field;
		this.money = money;
		//this는 클래스를 의미 this.은 클래스 바로 밑의 변수2
	}


	//기본생성자는 다른 생성자가 하나도 없을 때만 자동으로 만들어진다!!
	//입력값이 없으면서, 클래스 이름과 동일한 메서드 
	//=> 기본생성자 메서드
	//프로그래머가 메서드를 정의하지 않아도, 자동으로 만들어짐.
	//public 계좌() {
		//생성자 메서드는 무조건 void!
		//기본성격이 void인 경우, 보통 생략을 많이 함.
		
		//객체생성시마다, 자동으로 실행해주어야 하는 처리내용을 여기다 쓰면된다
		//초기화시킬 내용이 있으면, 이 메서드에다가 처리내용을 쓴다
		//객체생성시마다(new할때마다)무조건 호출되므로,
		//생성자 메서드(생성자)
		//System.out.println("내가 객체 생성시 마다 자동호출됩니다.");
		//System.out.println("보통 멤버변수 초기화 같은 처리를 넣어두는 편입니다.");
	//}
	//계좌객체를 생성할 때, name, field, money를 넣치 않으면 객체생성을 하지 못하게 해야함.
	//세가지의 값을 넣었을때만 계좌를 개설하도록 정의
	@Override
	public String toString() {
		return "계좌 [이름=" + name + ", 계좌종류=" + field + ", 금액=" + money + "]";
	}
	
	//객체 생성 후,멤버변수에 들어가 있는 값들을 한꺼번에 확인하고자 하는 경우
	//toString()을 만들자! => 출력용
	
}
